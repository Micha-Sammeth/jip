def outputName = "jip-${version}"

dependencies{
    compile 'com.martiansoftware:jsap:2.1'
    compile 'com.google.code.gson:gson:2.2.2'
    compile 'net.sourceforge.argparse4j:argparse4j:0.2.2'
    compile 'org.slf4j:slf4j-log4j12:1.6.6','org.slf4j:jcl-over-slf4j:1.6.6','org.slf4j:jul-to-slf4j:1.6.6'
    compile 'log4j:log4j:1.2.16'
    compile project(":jip-plugin-system")
    compile project(":jip-graph")
}


task dist(dependsOn: ['jar', 'javadocJar', 'sourcesJar'])

ext.distSpec = copySpec {
    from(project.rootDir){
        include 'LICENSE'
        include 'LGPL_LICENSE.txt'
        include 'APACHE_LICENSE.txt'
        include 'README.md'
    }
    into('bin') {        
        from("${project(':jip-client').projectDir}/src/dist/bin")
        //filter(org.apache.tools.ant.filters.ReplaceTokens, tokens:[])
        rename 'jip.sh',  'jip'
        fileMode = 0755
    }
    into('scripts') {
        from("${project(':jip-client').projectDir}/src/dist/scripts")
        fileMode = 0755
    }
    into('sbin') {
        from("${project(':jip-client').projectDir}/src/dist/sbin")
        rename 'jip-bootstrap.sh',  'jip-boostrap'
        fileMode = 0755
    }
    into('lib') {
        from(jar.outputs.files)
        from(configurations.runtime)
    }
}

task distDir(type: Copy){
    description = "Prepare a directory for distribution"
    into "${distsDir}/${outputName}"
    with distSpec
}


task distTar(type: Tar) {
    description = "Tars the binary distribution."
    baseName "jip"
    into "${outputName}"
    with distSpec
    compression = Compression.GZIP
}