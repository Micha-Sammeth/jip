apply plugin: 'base'
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'project-report'
apply plugin: 'eclipse'

group = "jip"
version = "1.0-SNAPSHOT"
sourceCompatibility = 1.6

repositories {
    mavenCentral()
    maven {
        url "http://sammeth.net/artifactory/repo"
    }
}


dependencies{
    groovy group: 'org.codehaus.groovy', name: 'groovy-all', version: '1.8.4'
	testCompile 'junit:junit-dep:4.10',
				'org.hamcrest:hamcrest-library:1.3.RC2',
				'org.hamcrest:hamcrest-core:1.3.RC2',
				'org.hamcrest:hamcrest-integration:1.3.RC2',
				'org.easymock:easymock:3.1'
    compile 'org.reflections:reflections:0.9.5',
            'com.google.guava:guava:13.0',
            'org.slf4j:slf4j-api:1.6.6',
            "com.google.inject:guice:3.0",
            "com.google.inject.extensions:guice-multibindings:3.0"

}

// add tasks for source/javadoc and test jars and add them as artifacts
//apply from : "${rootDir}/gradle/javaproject.gradle"

test{
    jvmArgs '-Xms128m', '-Xmx1G'
    //makes the standard streams (err and out) visible at console when running tests
    //testLogging.showStandardStreams = true

    //listening to test execution events
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
        ignoreFailures = true
    }
}

// custom tasks for creating source jar
task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

// custom tasks for creating javadoc jar
task javadocJar(type: Jar, dependsOn:"javadoc") {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task dist(dependsOn: ['jar', 'javadocJar', 'sourcesJar'])

configurations {
//    tests
    sjar
    jdoc
}

// add the jars as artifacts
artifacts {
    archives sourcesJar
    archives javadocJar
//    archives testJar
}



idea{
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = '1.2'
}
